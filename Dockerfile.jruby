FROM jruby:9.4.3.0

# Set working directory
WORKDIR /app

# Set environment variables
ENV RAILS_ENV=production
ENV JRUBY_OPTS="--dev -J-Xmx400m"
ENV BUNDLER_VERSION=2.4.6
# Force bundler to use platform-specific gems
ENV BUNDLE_FORCE_RUBY_PLATFORM=true

# Install dependencies
RUN apt-get update -qq && \
    apt-get install -y build-essential libpq-dev nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install bundler
RUN gem install bundler:$BUNDLER_VERSION

# Copy Gemfile and Gemfile.lock
COPY Gemfile Gemfile.lock ./

# Copy Ruby version file for JRuby
COPY .ruby-version.jruby .ruby-version

# Modify the Ruby version in the Gemfile to match JRuby's Ruby compatibility
RUN sed -i 's/ruby "3.2.1"/ruby "3.1.4"/' Gemfile

# Modify the pg gem to use the JDBC adapter for PostgreSQL
RUN sed -i 's/gem "pg"/gem "activerecord-jdbcpostgresql-adapter"/' Gemfile

# Remove or replace SQLite with JDBC adapter
RUN sed -i 's/gem "sqlite3"/#gem "sqlite3" # Removed for JRuby compatibility/' Gemfile

# Replace problematic gems with JRuby-compatible versions
RUN sed -i 's/gem "nio4r"/#gem "nio4r" # Removed for JRuby compatibility/' Gemfile && \
    sed -i 's/gem "date"/#gem "date" # Removed for JRuby compatibility/' Gemfile && \
    sed -i 's/gem "io-console"/#gem "io-console" # Removed for JRuby compatibility/' Gemfile

# Add platform-specific gems for JRuby
RUN echo 'gem "nio4r", "2.7.3", platform: :jruby' >> Gemfile && \
    echo 'gem "date", "3.3.4", platform: :jruby' >> Gemfile && \
    echo 'gem "io-console", "0.7.2", platform: :jruby' >> Gemfile

# Install gems with JRuby platform
RUN bundle config set --local platform jruby && \
    bundle config set --local without 'development test' && \
    bundle install

# Copy the rest of the application
COPY . .

# Make sure the Gemfile.lock doesn't override our Ruby version
RUN bundle update --bundler

# Precompile assets with BUNDLE_GEMFILE explicitly set
RUN BUNDLE_GEMFILE=./Gemfile bundle exec rake assets:precompile

# Expose port
EXPOSE $PORT

# Start the server
CMD bundle exec rails server -p $PORT -e $RAILS_ENV -b 0.0.0.0 
